// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PurgeAuditLogInitParameters struct {

	// (Number) To configure how long audit logs should be kept. For example, if you set this to 24 Harbor will only purge audit logs that are 24 or more hours old.
	AuditRetentionHour *float64 `json:"auditRetentionHour,omitempty" tf:"audit_retention_hour,omitempty"`

	// (String) Valid values are create delete pull, thoses values can be comma separated. When Create, Delete, or Pull is set, Harbor will include audit logs for those operations in the purge.
	IncludeOperations *string `json:"includeOperations,omitempty" tf:"include_operations,omitempty"`

	// (String) Sets the schedule how often the Garbage Collection will run.  Can be to "Hourly", "Daily", "Weekly" or can be a custom cron string ie, "5 4 * * *"
	Schedule *string `json:"schedule,omitempty" tf:"schedule,omitempty"`
}

type PurgeAuditLogObservation struct {

	// (Number) To configure how long audit logs should be kept. For example, if you set this to 24 Harbor will only purge audit logs that are 24 or more hours old.
	AuditRetentionHour *float64 `json:"auditRetentionHour,omitempty" tf:"audit_retention_hour,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Valid values are create delete pull, thoses values can be comma separated. When Create, Delete, or Pull is set, Harbor will include audit logs for those operations in the purge.
	IncludeOperations *string `json:"includeOperations,omitempty" tf:"include_operations,omitempty"`

	// (String) Sets the schedule how often the Garbage Collection will run.  Can be to "Hourly", "Daily", "Weekly" or can be a custom cron string ie, "5 4 * * *"
	Schedule *string `json:"schedule,omitempty" tf:"schedule,omitempty"`
}

type PurgeAuditLogParameters struct {

	// (Number) To configure how long audit logs should be kept. For example, if you set this to 24 Harbor will only purge audit logs that are 24 or more hours old.
	// +kubebuilder:validation:Optional
	AuditRetentionHour *float64 `json:"auditRetentionHour,omitempty" tf:"audit_retention_hour,omitempty"`

	// (String) Valid values are create delete pull, thoses values can be comma separated. When Create, Delete, or Pull is set, Harbor will include audit logs for those operations in the purge.
	// +kubebuilder:validation:Optional
	IncludeOperations *string `json:"includeOperations,omitempty" tf:"include_operations,omitempty"`

	// (String) Sets the schedule how often the Garbage Collection will run.  Can be to "Hourly", "Daily", "Weekly" or can be a custom cron string ie, "5 4 * * *"
	// +kubebuilder:validation:Optional
	Schedule *string `json:"schedule,omitempty" tf:"schedule,omitempty"`
}

// PurgeAuditLogSpec defines the desired state of PurgeAuditLog
type PurgeAuditLogSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PurgeAuditLogParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PurgeAuditLogInitParameters `json:"initProvider,omitempty"`
}

// PurgeAuditLogStatus defines the observed state of PurgeAuditLog.
type PurgeAuditLogStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PurgeAuditLogObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PurgeAuditLog is the Schema for the PurgeAuditLogs API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,harbor}
type PurgeAuditLog struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.auditRetentionHour) || (has(self.initProvider) && has(self.initProvider.auditRetentionHour))",message="spec.forProvider.auditRetentionHour is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.includeOperations) || (has(self.initProvider) && has(self.initProvider.includeOperations))",message="spec.forProvider.includeOperations is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.schedule) || (has(self.initProvider) && has(self.initProvider.schedule))",message="spec.forProvider.schedule is a required parameter"
	Spec   PurgeAuditLogSpec   `json:"spec"`
	Status PurgeAuditLogStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PurgeAuditLogList contains a list of PurgeAuditLogs
type PurgeAuditLogList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PurgeAuditLog `json:"items"`
}

// Repository type metadata.
var (
	PurgeAuditLog_Kind             = "PurgeAuditLog"
	PurgeAuditLog_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PurgeAuditLog_Kind}.String()
	PurgeAuditLog_KindAPIVersion   = PurgeAuditLog_Kind + "." + CRDGroupVersion.String()
	PurgeAuditLog_GroupVersionKind = CRDGroupVersion.WithKind(PurgeAuditLog_Kind)
)

func init() {
	SchemeBuilder.Register(&PurgeAuditLog{}, &PurgeAuditLogList{})
}
